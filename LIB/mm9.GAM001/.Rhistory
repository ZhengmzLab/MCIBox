if (!require("shiny")) install.packages("shiny")
if (!require("shinyjqui")) install.packages("shinyjqui")
if (!require("shinyWidgets")) install.packages("shinyWidgets")
if (!require("shinyjs")) install.packages("shinyjs")
if (!require("shinydashboard")) install.packages("shinydashboard")
if (!require("highcharter")) remotes::install_github("jbkunst/highcharter")
# install.packages("highcharter")
## common package
if (!require("grid")) install.packages("grid")
if (!require("gridExtra")) install.packages("gridExtra")
if (!require("scales")) install.packages("scales")
if (!require("RColorBrewer")) install.packages("RColorBrewer")
### comprihansive
if (!require("ggforce")) install.packages("ggforce")
if (!require("tidyr")) install.packages("tidyr")
if (!require("pheatmap")) install.packages("pheatmap")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("ggrepel")) install.packages("ggrepel")
## cluster
if (!require("Rtsne")) install.packages("Rtsne")
if (!require("ica"))  install.packages("ica")
if (!require("ruta")) install.packages("ruta")
if (!require("phateR"))  devtools::install_github("KrishnaswamyLab/phateR", dependencies=TRUE)
### rare packages
if (!require("sjmisc")) install.packages("sjmisc")
if (!require("png")) install.packages("png")
if (!require("tiff")) install.packages("tiff")
if (!require("OpenImageR")) install.packages("OpenImageR")
if (!require("factoextra")) install.packages("factoextra")
if (!require("dbscan")) install.packages("dbscan")
if (!require("FactoMineR")) install.packages("FactoMineR")
if (!require("mclust")) install.packages("mclust")
if (!require("cluster")) install.packages("cluster")
if (!require("broom")) install.packages("broom")
if (!require("DT")) install.packages('DT')
if (!require("broom")) install.packages("broom")
if (!require("DT")) install.packages('DT')
if (!require("reshape2")) install.packages("reshape2")
if (!require("bedr")) install.packages("bedr")
if (!require("rstudioapi")) install.packages("rstudioapi")
if (!require("cowplot")) install.packages("cowplot")
if (!require("sitools")) install.packages("sitools")
if (!require("stringr")) install.packages("stringr")
if (!require("reshape2")) install.packages("reshape2")
if (!require("rstudioapi")) install.packages("rstudioapi")
if (!require("cowplot")) install.packages("cowplot")
if (!require("sitools")) install.packages("sitools")
if (!require("stringr")) install.packages("stringr")
## global required
if (!suppressWarnings(require(devtools))) install.packages("devtools")
if (!require("rstudioapi")) install.packages("rstudioapi")
## shiny associate pkgs
if (!require("shiny")) install.packages("shiny")
if (!require("shinyjqui")) install.packages("shinyjqui")
if (!require("shinyWidgets")) install.packages("shinyWidgets")
if (!require("shinyjs")) install.packages("shinyjs")
if (!require("shinydashboard")) install.packages("shinydashboard")
if (!require("highcharter")) remotes::install_github("jbkunst/highcharter")
# install.packages("highcharter")
## common package
if (!require("grid")) install.packages("grid")
if (!require("gridExtra")) install.packages("gridExtra")
if (!require("scales")) install.packages("scales")
if (!require("RColorBrewer")) install.packages("RColorBrewer")
### comprihansive
if (!require("ggforce")) install.packages("ggforce")
if (!require("tidyr")) install.packages("tidyr")
if (!require("pheatmap")) install.packages("pheatmap")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("ggrepel")) install.packages("ggrepel")
## cluster
if (!require("Rtsne")) install.packages("Rtsne")
if (!require("ica"))  install.packages("ica")
if (!require("ruta")) install.packages("ruta")
if (!require("phateR"))  devtools::install_github("KrishnaswamyLab/phateR", dependencies=TRUE)
if (!require("factoextra")) install.packages("factoextra")
if (!require("dbscan")) install.packages("dbscan")
if (!require("FactoMineR")) install.packages("FactoMineR")
if (!require("mclust")) install.packages("mclust")
if (!require("cluster")) install.packages("cluster")
### rare packages
if (!require("sjmisc")) install.packages("sjmisc")
if (!require("png")) install.packages("png")
if (!require("tiff")) install.packages("tiff")
if (!require("OpenImageR")) install.packages("OpenImageR")
if (!require("broom")) install.packages("broom")
if (!require("DT")) install.packages('DT')
if (!require("bedr")) install.packages("bedr")
if (!require("bedr")) install_github('davetang/bedr')  #install.packages("bedr")
if (!require("bedr")) install_github('davetang/bedr')  #install.packages("bedr")
if (!require("bedr")) install_github('davetang/bedr')  #install.packages("bedr")
if (!require("bedr")) install_github('davetang/bedr')  #install.packages("bedr")
if (!require("colourpicker")) install.packages("colourpicker")
if (!require("leaflet")) install.packages("leaflet")
if (!require("leaflet")) devtools::install_github("rstudio/leaflet") #install.packages("leaflet")
if (!require("leaflet")) devtools::install_github("rstudio/leaflet") #install.packages("leaflet")
if (!require("leaflet")) devtools::install_github("rstudio/leaflet") #install.packages("leaflet")
if (!require("leaflet")) devtools::install_github("rstudio/leaflet") #install.packages("leaflet")
if (!require("sp")) install.packages("sp")
if (!require("sp")) install.packages("sp")
if (!require("xtable")) install.packages("xtable")
## global required
if (!suppressWarnings(require(devtools))) install.packages("devtools")
if (!require("rstudioapi")) install.packages("rstudioapi")
## shiny associate pkgs
if (!require("shiny")) install.packages("shiny")
if (!require("shinyjqui")) install.packages("shinyjqui")
if (!require("shinyWidgets")) install.packages("shinyWidgets")
if (!require("shinyjs")) install.packages("shinyjs")
if (!require("shinydashboard")) install.packages("shinydashboard")
if (!require("highcharter")) remotes::install_github("jbkunst/highcharter")
# install.packages("highcharter")
## common package
if (!require("grid")) install.packages("grid")
if (!require("gridExtra")) install.packages("gridExtra")
if (!require("scales")) install.packages("scales")
## color
if (!require("RColorBrewer")) install.packages("RColorBrewer")
if (!require("colourpicker")) install.packages("colourpicker")
if (!require("png")) install.packages("png")
if (!require("tiff")) install.packages("tiff")
if (!require("OpenImageR")) install.packages("OpenImageR")
## data frame
if (!require("tidyr")) install.packages("tidyr")
if (!require("bedr")) install_github('davetang/bedr')  #install.packages("bedr")
## tools
if (!require("reshape2")) install.packages("reshape2")
if (!require("stringr")) install.packages("stringr")
if (!require("sitools")) install.packages("sitools")
### comprihansive
if (!require("ggforce")) install.packages("ggforce")
if (!require("pheatmap")) install.packages("pheatmap")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("ggrepel")) install.packages("ggrepel")
if (!require("cowplot")) install.packages("cowplot")
## cluster
if (!require("Rtsne")) install.packages("Rtsne")
if (!require("ica"))  install.packages("ica")
if (!require("ruta")) install.packages("ruta")
if (!require("phateR"))  devtools::install_github("KrishnaswamyLab/phateR", dependencies=TRUE)
if (!require("factoextra")) install.packages("factoextra")
if (!require("dbscan")) install.packages("dbscan")
if (!require("FactoMineR")) install.packages("FactoMineR")
if (!require("mclust")) install.packages("mclust")
if (!require("cluster")) install.packages("cluster")
### rare packages
if (!require("sjmisc")) install.packages("sjmisc")
if (!require("broom")) install.packages("broom")
if (!require("DT")) install.packages('DT')
if (!require("leaflet")) devtools::install_github("rstudio/leaflet") #install.packages("leaflet")
if (!require("sp")) install.packages("sp")
if (!require("xtable")) install.packages("xtable")
if (!require("plotly")) install.packages("plotly")
if (!require("plotly")) install.packages("plotly")
options(repos=structure(c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/")))
if (!require("plotly")) install.packages("plotly")
#options(repos=structure(c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/")))
if (!require("plotly")) install.packages("plotly")
install.packages("uwot")
#options(repos=structure(c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/")))
#    if (!require(umapr))   devtools::install_github("ropenscilabs/umapr")
if (!require(uwot)) install.packages("uwot")
if (!require("rgdal")) install.packages("rgdal")
if (!require("sp")) install.packages("sp")
if (!require("xtable")) install.packages("xtable")
if (!require("plotly")) install.packages("plotly")
if (!require("lemon")) install.packages("lemon")
if (!require("data.table")) install.packages("data.table")
if (!require("gggenes")) install.packages("gggenes")
if (!require("caroline")) install.packages("caroline")
if (!require("rlist")) install.packages("rlist")
if (!require("ggpubr")) install.packages("ggpubr")
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("trinker/qdapTools")
install.packages("RCurl")
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("trinker/qdapTools")
install.packages("RCurl")
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("trinker/qdapTools")
if (!require("pacman")) install.packages("RCurl")
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("trinker/qdapTools")
if (!require("pacman")) install.packages("RCurl")
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("trinker/qdapTools")
if (!require("pacman")) install.packages("RCurl")
if (!require("pacman")) install.packages("pacman")
#pacman::p_load_gh("trinker/qdapTools")
if (!require("pacman")) install.packages("RCurl")
if (!require("pacman")) install.packages("pacman")
if (!require("qdapTools"))    pacman::p_load_gh("trinker/qdapTools")
install.packages("libcurl")
install.packages("libcurl")
if (!require("pacman")) install.packages("RCurl")
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("trinker/qdapTools")
install.packages("libcurl")
install.packages("swirl")
install.packages("chrom")
install.packages("swirl")
install.packages("RCurl")
install.packages("chrom")
install.packages("chron")
if (!require("pacman")) install.packages("RCurl")
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("trinker/qdapTools")
if (!require("pacman")) install.packages("RCurl")
if (!require("pacman")) install.packages("pacman")
pacman::p_load_gh("trinker/qdapTools")
if (!require("pacman")) install.packages("RCurl")
if (!require("pacman")) install.packages("pacman")
# pacman::p_load_gh("trinker/qdapTools")
library(qdapTools)
## global required
options(repos=structure(c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/")))
if (!suppressWarnings(require(devtools))) install.packages("devtools")
if (!require("rstudioapi")) install.packages("rstudioapi")
if (!require("shiny")) install.packages("shiny")
if (!require("shinyjqui")) install.packages("shinyjqui")
if (!require("shinyWidgets")) install.packages("shinyWidgets")
if (!require("shinyjs")) install.packages("shinyjs")
if (!require("shinydashboard")) install.packages("shinydashboard")
if (!require("highcharter")) remotes::install_github("jbkunst/highcharter")
# install.packages("highcharter")
if (!require("shiny")) install.packages("shiny")
if (!require("shinyjqui")) install.packages("shinyjqui")
if (!require("shinyWidgets")) install.packages("shinyWidgets")
if (!require("shinyjs")) install.packages("shinyjs")
if (!require("shinydashboard")) install.packages("shinydashboard")
if (!require("highcharter")) remotes::install_github("jbkunst/highcharter")
# install.packages("highcharter")
## global required
options(repos=structure(c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/")))
if (!suppressWarnings(require(devtools))) install.packages("devtools")
if (!require("rstudioapi")) install.packages("rstudioapi")
## global required
options(repos=structure(c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/")))
if (!suppressWarnings(require(devtools))) install.packages("devtools")
if (!require("rgdal")) install.packages("rgdal")
if (!require("rstudioapi")) install.packages("rstudioapi")
## global required
options(repos=structure(c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/")))
if (!suppressWarnings(require(devtools))) install.packages("devtools")
if (!require("rgdal")) install.packages("rgdal")
if (!require("rstudioapi")) install.packages("rstudioapi")
## global required
options(repos=structure(c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/")))
if (!suppressWarnings(require(devtools))) install.packages("devtools")
#if (!require("rgdal")) install.packages("rgdal")
library(rgdal)
if (!require("rgdal")) install.packages("rgdal")
if (!require("rgdal")) install.packages("rgdal")
library(shiny); runApp('/mnt/hgfs/IND1CELLV2/SC2021OCT1304.R')
library(shiny); runApp('/mnt/hgfs/IND1CELLV2/SC2021OCT1304-04.R')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp()
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp()
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp()
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201-12281613-C04-C04LP.SPLIT')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
session_info()
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp()
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp()
runApp('Desktop/MCIBOX/MCI2201')
runApp()
runApp('Desktop/MCIBOX/MCI2201')
library(ggplotly)
install.packages("ggplotly")
library(ggplotly)
devtools::install_github("ropensci/plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
library(plotly)
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp()
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
runApp('Desktop/MCIBOX/MCI2201')
shiny::runApp('Desktop/MCIBOX/MCI2201')
for {C in seq(1,19) X Y){
print(C)
}
FT<-readRDS("chrX.SUBRDS.smp2")
tail(FT)
library(dplyr)
RFT<-FT
RFT<-RFT%>%mutate(NEWID = as.numeric(GEMNUMID)-1000000000+1000000)
head(RFT)
RFT<-RFT%>%mutate(GEMNUMID = as.character(format(NEWID,scientific = FALSE)))
str(RFT)
head(RFT)
RFT<-select(RFT,-NEWID)
head(RFT)
saveRDS(RFT,file="chrX.SUBRDS.smp")
for {C in seq(1,19) X Y){
print(C)
}
FT<-readRDS("chrX.SUBRDS.smp2")
tail(FT)
library(dplyr)
RFT<-FT
RFT<-RFT%>%mutate(NEWID = as.numeric(GEMNUMID)-1000000000+1000000)
head(RFT)
RFT<-RFT%>%mutate(GEMNUMID = as.character(format(NEWID,scientific = FALSE)))
str(RFT)
head(RFT)
RFT<-select(RFT,-NEWID)
head(RFT)
saveRDS(RFT,file="chrX.SUBRDS.smp")
for (C in seq(1,19) X Y){
print(C)
}
for (C in seq(1,19) X Y){
print(C)
}
for (C in c(seq(1,19),X,Y)){
print(C)
}
for (val in eq(1,19))
for (C in c(seq(1,19),"X","Y")){
print(C)
}
for (C in c(seq(1,19),"X","Y")){
print(C)
}
for (C in c(seq(1,19),"X","Y")){
NAME=paste0("chr",C)
print(NAME)
}
for (C in c(seq(1,19),"X","Y")){
NAME=paste0("chr",C)
print(NAME)
FNAME=paste0(NAME,".SUBRDS.smp2")
FT<-readRDS(FNAME)
tail(FT)
library(dplyr)
RFT<-FT
RFT<-RFT%>%mutate(NEWID = as.numeric(GEMNUMID)-1000000000+1000000)
head(RFT)
RFT<-RFT%>%mutate(GEMNUMID = as.character(format(NEWID,scientific = FALSE)))
str(RFT)
head(RFT)
RFT<-select(RFT,-NEWID)
head(RFT)
saveRDS(RFT,file=paste0(FNAME,".new"))
}
for (C in c(seq(1,19),"X","Y")){
NAME=paste0("chr",C)
print(NAME)
FNAME=paste0(NAME,".SUBRDS.smp2")
print(FNAME)
FT<-readRDS(FNAME)
tail(FT)
library(dplyr)
RFT<-FT
RFT<-RFT%>%mutate(NEWID = as.numeric(GEMNUMID)-1000000000+1000000)
head(RFT)
RFT<-RFT%>%mutate(GEMNUMID = as.character(format(NEWID,scientific = FALSE)))
str(RFT)
head(RFT)
RFT<-select(RFT,-NEWID)
head(RFT)
#saveRDS(RFT,file=paste0(FNAME,".new"))
}
for (C in c(seq(1,19),"X","Y")){
NAME=paste0("chr",C)
print(NAME)
FNAME=paste0(NAME,".SUBRDS.smp2")
print(FNAME)
FT<-readRDS(FNAME)
tail(FT)
library(dplyr)
RFT<-FT
RFT<-RFT%>%mutate(NEWID = as.numeric(GEMNUMID)-1000000000+1000000)
head(RFT)
RFT<-RFT%>%mutate(GEMNUMID = as.character(format(NEWID,scientific = FALSE)))
str(RFT)
head(RFT)
RFT<-select(RFT,-NEWID)
head(RFT)
#saveRDS(RFT,file=paste0(FNAME,".new"))
}
setwd("/home/simon/Desktop/MCIBOX/MCI2201/LIB/M.GAM001")
for (C in c(seq(1,19),"X","Y")){
NAME=paste0("chr",C)
print(NAME)
FNAME=paste0(NAME,".SUBRDS.smp2")
print(FNAME)
FT<-readRDS(FNAME)
tail(FT)
library(dplyr)
RFT<-FT
RFT<-RFT%>%mutate(NEWID = as.numeric(GEMNUMID)-1000000000+1000000)
head(RFT)
RFT<-RFT%>%mutate(GEMNUMID = as.character(format(NEWID,scientific = FALSE)))
str(RFT)
head(RFT)
RFT<-select(RFT,-NEWID)
head(RFT)
#saveRDS(RFT,file=paste0(FNAME,".new"))
}
for (C in c(seq(1,19),"X","Y")){
NAME=paste0("chr",C)
print(NAME)
FNAME=paste0(NAME,".SUBRDS.smp2")
print(FNAME)
FT<-readRDS(FNAME)
tail(FT)
library(dplyr)
RFT<-FT
RFT<-RFT%>%mutate(NEWID = as.numeric(GEMNUMID)-1000000000+1000000)
head(RFT)
RFT<-RFT%>%mutate(GEMNUMID = as.character(format(NEWID,scientific = FALSE)))
str(RFT)
head(RFT)
RFT<-select(RFT,-NEWID)
head(RFT)
saveRDS(RFT,file=paste0(FNAME,".new"))
}
runApp('~/Desktop/MCIBOX/MCI2201')
runApp('~/Desktop/MCIBOX/MCI2201')
runApp('~/Desktop/MCIBOX/MCI2201')
runApp('~/Desktop/MCIBOX/MCI2201')
runApp('~/Desktop/MCIBOX/MCI2201')
runApp('~/Desktop/MCIBOX/MCI2201')
runApp('~/Desktop/MCIBOX/MCI2201')
runApp('~/Desktop/MCIBOX/MCI2201')
runApp('~/Desktop/MCIBOX/MCI2201')
runApp('~/Desktop/MCIBOX/MCI2201')
runApp('~/Desktop/MCIBOX/MCI2201')
runApp()
runApp('~/Desktop/MCIBOX/MCI2201')
runApp()
